name: Deploy hass-addon-sunsynk-multi to ghcr.io

on:
  release:
    types:
      - published
  workflow_dispatch: {}

env:
  REGISTRY_IMAGE: ghcr.io/maslyankov/hass-addon-sunsynk-multi

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm/v6
          - linux/arm/v7
          - linux/arm64
          # - linux/i386
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4  # Checkout the repository

      - name: Prepare Files for Build
        run: |
          mkdir -p hass-addon-sunsynk-multi/sunsynk
          cp -r src hass-addon-sunsynk-multi/sunsynk/
          cp setup.* README.md hass-addon-sunsynk-multi/sunsynk/

      - name: Set up the correct base image based on platform
        run: |
          case "${{ matrix.platform }}" in
            linux/amd64)  echo "BUILD_FROM=homeassistant/amd64-base-python:3.11-alpine3.18" >> $GITHUB_ENV ;;
            linux/arm64)  echo "BUILD_FROM=homeassistant/aarch64-base-python:3.11-alpine3.18" >> $GITHUB_ENV ;;
            linux/arm/v6) echo "BUILD_FROM=homeassistant/armhf-base-python:3.11-alpine3.18" >> $GITHUB_ENV ;;
            linux/arm/v7) echo "BUILD_FROM=homeassistant/armv7-base-python:3.11-alpine3.18" >> $GITHUB_ENV ;;
            linux/i386)   echo "BUILD_FROM=homeassistant/i386-base-python:3.11-alpine3.18" >> $GITHUB_ENV ;;
          esac

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache  # Cache path
          key: ${{ runner.os }}-buildx-${{ github.sha }}  # Unique key for cache
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ./hass-addon-sunsynk-multi  # Specify the directory containing your Dockerfile
          file: ./hass-addon-sunsynk-multi/Dockerfile  # Specify the Dockerfile path within the context
          platforms: ${{ matrix.platform }}
          cache-from: type=local,src=/tmp/.buildx-cache  # Use cache for build
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max  # Save cache
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
          build-args: |
            BUILD_FROM=${{ env.BUILD_FROM }}

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Prepare artifact name
        run: echo "SANITIZED_PLATFORM=$(echo ${{ matrix.platform }} | sed 's/\//-/g')" >> $GITHUB_ENV
  
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.SANITIZED_PLATFORM }}  # Use the sanitized platform name
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}