[build-system]
build-backend = "uv_build"
requires = [ "uv-build>=0.8.20,<0.9" ]

[project]
name = "sunsynk"
version = "0.9.3"
description = "Library to interface Deye/Sunsynk Hybrid Inverters"
readme = "README.md"
keywords = [ "asyncio", "deye", "inverter", "modbus", "sunsynk" ]
license = "Apache-2.0"
license-files = [ "LICENSE" ]
authors = [ { name = "Johann Kellerman", email = "kellerza@gmail.com" } ]
requires-python = ">=3.12"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Natural Language :: English",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14",
]
dependencies = [
  "attrs>=25,<26",
  "cattrs>=25,<26",
  "mqtt-entity[options]>=1,<2",
  "prettytable==3.16",
  "pymodbus[serial]==3.11.3",
]
optional-dependencies.solarman = [ "pysolarmanv5==3.0.6" ]
optional-dependencies.umodbus = [ "async-modbus==0.2.2", "connio==0.2", "umodbus==1.0.4" ]
urls.Homepage = "https://kellerza.github.io/sunsynk/"
urls.Source = "https://github.com/kellerza/sunsynk"

[dependency-groups]
dev = [
  "codespell",
  "mypy",
  "pyproject-fmt",
  "pytest",
  "pytest-asyncio",
  "pytest-cov",
  "pytest-github-actions-annotate-failures",
  "types-pyyaml",
]

[tool.uv.build-backend]
module-name = [ "sunsynk", "ha_addon_sunsynk_multi" ]

[tool.ruff]
include = [ "src/**/*.py" ]
format.line-ending = "lf"
format.docstring-code-format = true
lint.select = [
  "A",     # flake8-builtins
  "ASYNC", # flake8-async
  "B",     # bugbear
  "D",     # pydocstyle
  "E",     # pycodestyle
  "F",     # pyflakes
  "I",     # isort
  "PGH",   # pygrep-hooks
  "PIE",   # flake8-pie
  "PL",    # pylint
  "PTH",   # flake8-pathlib
  "PYI",   # flake8-pyi
  "RUF",   # ruff
  "UP",    # pyupgrade
  "W",     # pycodestyle
]
lint.ignore = [ "D203", "D213", "E203", "E501", "PLR2004" ]
lint.pylint.max-args = 7

[tool.codespell]
skip = "data,*.map,package-lock.json,*.map,**/cache/*,**/node_modules/*"
ignore-words-list = "HASS,hass,Hass,ist"

[tool.pytest.ini_options]
pythonpath = [ ".", "src" ]
filterwarnings = "ignore:.+@coroutine.+deprecated.+"
testpaths = "src\tests"
norecursedirs = [ ".git", "modules" ]
log_cli = true
log_cli_level = "DEBUG"
asyncio_mode = "auto"
addopts = "--cov=src --cov-report xml:cov.xml"

[tool.mypy]
disallow_untyped_defs = true
ignore_missing_imports = true
exclude = [ "build" ]
enable_error_code = [ "ignore-without-code" ]
