[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"
[tool.setuptools]
license-files = [] # https://github.com/astral-sh/uv/issues/9513

# [build-system] # https://docs.astral.sh/uv/concepts/build-backend/
# requires = ["uv_build>=0.7.13,<0.8.0"]
# build-backend = "uv_build"
# [tool.uv.build-backend]
# module-name = "sunsynk"
# module-root = "src"

[project]
name = "sunsynk"
version = "0.9.0"
description = "Library to interface Deye/Sunsynk Hybrid Inverters"
keywords = ["sunsynk", "deye", "inverter", "modbus", "asyncio"]
readme = "README.md"
authors = [{ name = "Johann Kellerman", email = "kellerza@gmail.com" }]
license = { text = "Apache-2.0" }
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
requires-python = ">=3.12"
dependencies = [
    "attrs>=25,<26",
    "cattrs>=25,<26",
    "jmespath==1.0.1",
    "mqtt-entity>=1,<2",
    "prettytable==3.16.0",
    "pymodbus[serial]==3.9.2",
    "pyyaml==6.0.2",
]

[project.urls]
Homepage = "https://kellerza.github.io/sunsynk/"

[project.optional-dependencies]
umodbus = ["async_modbus==0.2.2", "connio==0.2.0", "umodbus==1.0.4"]
solarman = ["pysolarmanv5==3.0.6"]
addon = ["aiohttp>3.12,<4"]

[dependency-groups]
dev = [
    "mypy",
    "pylint",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-github-actions-annotate-failures",
    "pytest",
    "types-jmespath",
    "types-PyYAML",
]

[tool.mypy]
disallow_untyped_defs = true
ignore_missing_imports = true
exclude = "build/.*"

[tool.pylint]
extension-pkg-whitelist = ["orjson"]

[tool.pylint.'MESSAGES CONTROL']
good-names = ["db", "fr", "cr", "k", "i", "ui"]
enable = ["W", "E", "F"]
disable = ["R", "unused-argument", "line-too-long"]

[tool.pylint.design]
max-returns = 8

[tool.pytest.ini_options]
pythonpath = [".", "src"]
filterwarnings = "ignore:.+@coroutine.+deprecated.+"
testpaths = "src\tests"
norecursedirs = [".git", "modules"]
log_cli = true
log_cli_level = "DEBUG"
asyncio_mode = "auto"
addopts = "--cov=src --cov-report xml:cov.xml"

[tool.ruff]
target-version = "py312"
include = ["src/**/*.py"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "lf"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.ruff.lint]
select = [
    "B",   # bugbear
    "D",   # pydocstyle
    "E",   # pycodestyle
    "F",   # pyflakes
    "I",   # isort
    "PIE", # flake8-pie
    "PTH", # flake8-pathlib
    "PYI", # flake8-pyi
    "RUF", # ruff
    "UP",  # pyupgrade
    "W",   # pycodestyle
]
ignore = ["E203", "E501", "D203", "D213"]
